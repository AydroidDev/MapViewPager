{"name":"MapViewPager","tagline":"Android library that connects ViewPager fragments with Google Maps markers","body":"[![Download](https://api.bintray.com/packages/moreno/maven/mapviewpager/images/download.svg)](https://bintray.com/moreno/maven/mapviewpager/_latestVersion)\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-MapViewPager-brightgreen.svg?style=flat)](http://android-arsenal.com/details/1/3087)\r\n[![License](https://img.shields.io/:License-Apache-orange.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\r\n\r\n![screenshot](https://raw.githubusercontent.com/nitrico/mapviewpager/master/screenshot1.png)\r\n![screenshot](https://raw.githubusercontent.com/nitrico/mapviewpager/master/screenshot2.png)  \r\n\r\nCheck out the **[sample apk](https://github.com/nitrico/mapviewpager/raw/master/MapViewPager.apk)** !\r\n\r\n#### Notice\r\n* **Not fully tested yet**, but it works perfectly on my Nexus 5 running Marshmallow.\r\n* Only `android.support.v4.app.Fragment` and `SupportMapFragment` supported right now.\r\n* It is my first Android lib. Tips, suggestions and requests are all welcome.\r\n\r\n\r\n## Features\r\n\r\n* Supports any amount of markers per fragment.\r\n* Default camera position (for fragments with 0 or *more than 1* markers) automatically calculated.\r\n\r\n\r\n## Download\r\n\r\n#### Gradle\r\n\r\n```gradle\r\ndependencies {\r\n    compile 'com.android.support:appcompat-v7:23.1.1'\r\n    compile 'com.google.android.gms:play-services-maps:8.4.0'\r\n    compile 'com.github.nitrico.mapviewpager:mapviewpager:1.0.0'\r\n}\r\n```\r\n\r\n\r\n## Usage\r\n\r\n> Don't forget to add the right **permissions** and your Google Maps **API key** to your `AndroidManifest.xml` file.\r\n\r\nCreate a ViewPager adapter extending from **MapViewPager.Adapter** or **MapViewPager.MultiAdapter** and override method\r\n`CameraPosition getCameraPosition(int position)` or `List<CameraPosition> getCameraPositions(int position)` returning the markers camera position for each fragment. \r\n\r\n> To create a CameraPosition: `CameraPosition.fromLatLngZoom(new LatLng(latitude, longitude), zoom);`\r\n\r\nInclude the view in your xml layout\r\n```xml\r\n<com.github.nitrico.mapviewpager.MapViewPager\r\n        android:id=\"@+id/mapViewPager\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:viewPagerWeight=\"1\"\r\n        app:mapWeight=\"1\"\r\n        app:mapGravity=\"1\"\r\n        app:mapOffset=\"56dp\" />\r\n```\r\n\r\nFind the view in your activity and then call `mapViewPager.start(this, adapter)` or `mapViewPager.start(this, adapter, callback)` passing the AppCompatActivity (or FragmentActivity) and MapViewPager.Adapter (or MapViewPager.MultiAdapter) instances. You can also pass a **MapViewPager.Callback** instance to get notified when the GoogleMap object is created and working.\r\n\r\n#### Builder\r\n\r\nIf you want more control on how to display the map and the ViewPager, for example to overlap each other, you can add a `<android.support.v4.view.ViewPager>` and a `<fragment class=\"com.google.android.gms.maps.SupportMapFragment\">` to your activity layout and then and pass them to create the MapViewPager object using the **MapViewPager.Builder** class:\r\n\r\n```java\r\nMapViewPager mvp = new MapViewPager.Builder(this) // this is Context\r\n        .mapFragment(mapFragment)                 // mapFragment is SupportMapFragment\r\n        .viewPager(viewPager)                     // viewPager is ViewPager\r\n        .adapter(adapter)                         // adapter is MapViewPager.Adapter or MapViewPager.MultiAdapter\r\n        .position(initialPosition)                // Optional initialPosition is int     \r\n        .callback(callback)                       // Optional callback is MapViewPager.Callback\r\n        .markersAlpha(alpha)                      // Optional\r\n        .mapPadding(left, top, right, bottom)     // Optional\r\n        .mapOffset(offset)                        // Optional\r\n        .build();\r\n```\r\n\r\n> Remember that mapFragment is a Fragment, not a View! To find it: `mapFragment = (SupportMapFragment) activity.getSupportFragmentManager().findFragmentById(R.id.mapFragment);`\r\n\r\nCheck the examples in the [sample folder](https://github.com/nitrico/mapviewpager/tree/master/sample).\r\n\r\n\r\n## Documentation\r\n\r\n#### XML attributes\r\n\r\nThey are all optional.\r\n\r\n|Attribute|Format|Default|Description|\r\n|---|---|---|---|\r\n|viewPagerWeight|integer|`1`|Weight of the viewpager in the layout|\r\n|mapWeight|integer|`1`|Weight of the map in the layout|\r\n|mapGravity|integer (0..3)|`1`|Position of the map in the layout: 0=left, 1=top, 2=right, 3=bottom|\r\n|mapOffset|dimension|`32dp`|Map *padding* for multiple markers on the map|\r\n|mapPaddingLeft|dimension|`0dp`|Left map padding|\r\n|mapPaddingTop|dimension|`0dp`|Top map padding|\r\n|mapPaddingRight|dimension|`0dp`|Right map padding|\r\n|mapPaddingBottom|dimension|`0dp`|Bottom map padding|\r\n|markersAlpha|float (0..1)|`0.4`|Opacity of markers when deactivated|\r\n\r\n#### Public methods\r\n\r\n```java\r\nvoid start(@NonNull FragmentActivity activity,\r\n           @NonNull MapViewPager.AbsAdapter mapAdapter)\r\nvoid start(@NonNull FragmentActivity activity,\r\n           @NonNull MapViewPager.AbsAdapter mapAdapter,\r\n           @Nullable MapViewPager.Callback callback)\r\nvoid start(@NonNull FragmentActivity activity,\r\n           @NonNull MapViewPager.AbsAdapter mapAdapter,\r\n           int initialPosition) \r\nvoid start(@NonNull FragmentActivity activity, \r\n           @NonNull MapViewPager.AbsAdapter mapAdapter,\r\n           int initialPosition,\r\n           @Nullable MapViewPager.Callback callback)\r\n\r\nGoogleMap getMap()\r\nSupportMapFragment getMapFragment()\r\nViewPager getViewPager() \r\nCameraUpdate getDefaultPosition()\r\n\r\n// when adapter extends MapViewPager.Adapter\r\nMarker getMarker(int position)\r\nList<Marker> getMarkers()\r\n\r\n// when adapter extends MapViewPager.MultiAdapter\r\nMarker getMarker(int page, int position)\r\nList<Marker> getMarkers(int page) \r\nList<List<Marker>> getAllMarkers()\r\nCameraUpdate getDefaultPosition(int page) \r\nList<CameraUpdate> getDefaultPositions()\r\n```\r\n**Warning!** In order to avoid `NullPointerException`s when calling any of those getters before the actual GoogleMap object is created, you should use them _only after_ `onMapViewPagerReady()` method in the callback is called.\r\n\r\nTo override in **MapViewPager.Callback** effective classes\r\n```java\r\nvoid onMapViewPagerReady()\r\n```\r\n\r\nTo override in **MapViewPager.Adapter** effective classes\r\n```java\r\nCameraPosition getCameraPosition(int position)\r\n```\r\n\r\nTo override in **MapViewPager.MultiAdapter** effective classes\r\n```java\r\nList<CameraPosition> getCameraPositions(int page)\r\nString getMarkerTitle(int page, int position)\r\n```\r\nBoth adapters extends from `FragmentStatePagerAdapter`, so you also need to override\r\n```java\r\nCharSequence getPageTitle(int position) // this will be used as marker title in MapViewPager.Adapter\r\nFragment getItem(int position)\r\nint getCount()\r\n```\r\n\r\n## Author\r\n\r\n##### Miguel Ángel Moreno\r\n\r\nI'm available to be hired, Contact me!\r\n\r\n|[Email](mailto:nitrico@gmail.com)|[Facebook](https://www.facebook.com/miguelangelmoreno)|[Google+](https://plus.google.com/+Miguel%C3%81ngelMorenoS)|[Linked.in](https://www.linkedin.com/in/morenomiguelangel)|[Twitter](https://twitter.com/nitrico/)\r\n|---|---|---|---|---|\r\n\r\n\r\n## License\r\n```txt\r\nCopyright 2016 Miguel Ángel Moreno\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}